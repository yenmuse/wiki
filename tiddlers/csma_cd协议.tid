created: 20220510023400271
creator: TidGiUser
modified: 20220510030916406
modifier: TidGiUser
tags: 计算机网络
title: csma/cd协议
tmap.id: 1c5f0235-061f-4a05-92bf-39bec569f680
type: text/vnd.tiddlywiki

cs: carrier sensing,载波监听，listne before talk，如果其他人正在说话，等到他们说完完。

cd: collision detection,冲突检测，如果与其它人同时开始说话，停止说话

Q：如果所有节点都进行监听了，为什么还会发生碰撞呢？

A：要考虑到信道传播所需时间，比如节点A在时间$$t_0$$发送数据，但是经过时间$$\Delta t$$，信道才到达节点B，那么如果节点B在$$[t_0, t_0 + \Delta t]$$检测，会发现信道是空闲的。显然$$\Delta t$$是决定传输效率的一个关键参数

csma/cd协议的工作方式：

# 节点收到数据时，准备报文并放入缓存

# 节点检测信道，信道忙就一直等待，信道空闲就发送数据

# 传输过程中，节点保持检测信道，发现信道忙就中止发送

# 中止传输后，节点等待一个随机时间量，然后返回第二步

显然等待一个随机时间量是必须的，否则将会造成持续碰撞。但是这个随机时间量多大合适呢？太小而节点数量太多就会导致大概率再次碰撞，太大而节点数量很少，又会造成信道浪费。

目前一个比较常见的作法是二进制指数后退算法(Binary Exponential Algorithm)：当传输一个给定帧时，在该帧经历了一连串的n次碰撞后．节点随机地从$$\left\{0,1,2, \cdots, 2^{n}-1\right\}$$选择一个K值。因此，一个帧经历的碰撞越多，K选择的间隔越大。

