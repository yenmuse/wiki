created: 20211211074828635
creator: TidGiUser
modified: 20220325161813365
modifier: TidGiUser
tags: python scipy
title: scipy中的线性卷积
tmap.id: 3305bc85-e46d-42ae-8621-99e83c63381e
type: text/vnd.tiddlywiki

scipy有个包叫做signal，这个包里提供了一系列信号处理相关的函数，比如线性卷积convolve：

scipy.signal.convolve(in1, in2, mode='full', method='auto')

* in1: array_like, First input.

* in2: array_like, Second input. Should have the same number of dimensions as in1.

* mode: str {‘full’, ‘valid’, ‘same’}, optional. A string indicating the size of the output:

** full: The output is the full discrete linear convolution of the inputs. (Default)

** valid: The output consists only of those elements that do not rely on the zero-padding. In ‘valid’ mode, either in1 or in2 must be at least as large as the other in every dimension.

** same: The output is the same size as in1, centered with respect to the ‘full’ output.

* method: str {‘auto’, ‘direct’, ‘fft’}, optional. A string indicating which method to use to calculate the convolution.

** direct: The convolution is determined directly from sums, the definition of convolution.

** fft: The Fourier Transform is used to perform the convolution by calling fftconvolve.

** auto: Automatically chooses direct or Fourier method based on an estimate of which is faster (default). See Notes for more detail.


<<<
import numpy as np

import scipy as sp

a = np.arange(4)

b = np.arange(3) + 4

full_mode = sp.signal.convolve(a, b, mode = 'full')

valid_mode = sp.signal.convolve(a, b, mode = 'valid')

same_mode = sp.signal.convolve(a, b, mode = 'same')

print(a, b)

print(full_mode, valid_mode, same_mode)

output:

[0 1 2 3] [4 5 6]

[ 0  4 13 28 27 18] [13 28] [ 4 13 28 27]
<<<

{{scipy-convolve-示例.png}}
