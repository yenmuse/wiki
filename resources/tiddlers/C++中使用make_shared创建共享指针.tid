created: 20210706030655450
modified: 20211015025518292
revision: 6-82ef3544df537caead3a21a9f60b34b7
tags: 智能指针 c++
title: C++中使用make_shared创建共享指针
tmap.id: fb2c7a59-786b-4d48-b1c9-3452994520d6
type: text/vnd.tiddlywiki

C++中创建共享指针有这两种方法：


```
Separate allocation
auto sp1 = shared_ptr<widget>{ new widget{} };
auto sp2 = sp1;
```

和


```
Single allocation
auto sp1 = make_shared<widget>();
auto sp2 = sp1;
```

推荐使用第二种，优点在于：

* 看起来更加整洁

* 共享指针除了指向对象的指针还有一些内部的辅助信息，比如对象的ref count。如果使用这种方法的话，对象和共享指针的内存会一同分配，否则对象分配一块内存，共享指针本身分配在另一块内存，这会导致：

** 增加了内存分配的overhead

** 降低了缓存的本地性

[ext[Solution Smart Pointers – Sutter’s Mill|file:./resources/simpread/simpread-Solution Smart Pointers – Sutter’s Mill.html]]