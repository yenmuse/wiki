created: 20210917052212128
modified: 20210928012333038
revision: 10-7ff4a48ddcaa6b6415f1e641cc3be465
tags: 
title: 软件工程的一点感想
type: text/vnd.tiddlywiki

软件是一种商品，它满足了人们的某种需求，是人与硬件之间的桥梁。硬件机械不变且无法理解人类的语言，人的需求复杂多变到常常自己也无法认识清楚。软件为了应对复杂多变的需求，发展出了一整套的方法论：设计原则、软件架构、敏捷开发等等，都是为了更好的满足需求，相应需求的变化。

需求分析的stakeholders：

* 客户：客户提出需求，并清晰描述需求

* 决定是否要满足该需求的角色：评估某个需求是否合理，以什么优先级来满足，需要多少资源(人月+物资)，风险多大

* 具有专业知识的角色：需求的来源可能有很多种，比如客户，产业链上下游，行业标准等等，通常理解这些需求要求相当的专业知识。

* 具有软件或硬件开发知识的角色：软硬件开发本身要求相关的专业知识，比如C/C++/Verilog这些开发语言、软件框架的设计、开发环境的搭建、测试案例的编写等；除此之外，还要对软硬件工程管理和配置，比如人力的调度、开发流程的管理等，有深入了解；

上述的每个角色可以是一个人或一群人，也可以是一个人或一群人同时扮演多个角色，在不同的范式或者组织中经常有不同的叫法，极端情况下，甚至可以同一个人同时担任后面三种角色。

另外随着组织架构与产品架构的复杂性的增长，上面的情况也会随之复杂。人们应对复杂性的常见做法是divide and conquer，这体现在人员组织架构上是层级制度，体现在产品架构上是软硬件的模块化与分层。随着人员组织架构的层级化，上述的几个角色在每个层级的子组织中也需要有体现。

单纯从技术角度来看需求分析，关键在于区分变与不变。对于一个比较复杂的系统，我们需要能提炼出其不变的部分，作为架构的支撑，同时要保留足够的灵活性，来处理其变化的部分，我的理解，所有的软件设计原则比如追求低耦合高内聚、单一职责原则、开放封闭原则、依赖倒置原则、里氏替换原则，接口隔离原则等等都是这一方法的体现。